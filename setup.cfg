[metadata]
name=atmospheric-inverse-methods-for-flux-optimization
description=A package for the application of inverse methods to atmospheric trace gas flux optimization.
long_description=file: README.rst
long_description_content_type=text/x-rst
classifiers=
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    Topic :: Science/Engineering :: Atmospheric Science
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Operating System :: OS Independent
    License :: OSI Approved :: BSD License
license=BSD3
license_file=PSU Open Source Software License Agreement.docx
license_files=
    LICENSE.txt
    PSU Open Source Software License Agreement.docx
url=https://github.com/psu-inversion/atmospheric-inverse-methods-for-flux-optimization
download_url=https://github.com/psu-inversion/atmospheric-inverse-methods-for-flux-optimization/releases
project_urls=
    documentation=https://psu-inversion.github.io/atmospheric-inverse-methods-for-flux-optimization/
    bug tracker=https://github.com/psu-inversion/atmospheric-inverse-methods-for-flux-optimization/issues
platform=any
keywords=
    flux optimization
    inverse problems
    underdetermined problem
    Data Assimilation

[options]
tests_require=
    unittest2
    pandas
    xarray
install_requires=
    six
    numpy>=1.13
    scipy<1.4
    pyfftw
packages=find:
python_requires= >=2.7, <4, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*

[options.extras_require]
examples=
    xarray>=0.10.0,!=0.14.0
    cf_units
    dask[array]>=1.1.0; python_version < "3.0"
    dask[array]>=0.14.2; python_version >= "3.0"
tests=
    unittest2
    pandas
    xarray
wrapper=
    pandas
    xarray

[options.packages.find]
where=src

[bdist_wheel]
universal=True

[sdist]
formats=bztar,zip,gztar

[lint]
#[REPORTS]
lint-reports=yes
lint-output-format=parseable
# Because it can't find cholesky otherwise
lint-unsafe-load-any-extension=yes
lint-extension-pkg-whitelist=numpy,scipy,numpy.core.multiarray,numpy.linalg.lapack_lite,scipy.linalg.decomp_cholesky
# I prefer the emacs/flake8 continuation convention
# no-member would be cought by the test suite. This doesn't work here
lint-disable=C0330,bad-continuation,E1101,no-member,unnecessary-pass,arguments-differ

[TYPECHECK]
ignored-classes=netCDF4.Dataset
ignored-modules=numpy,numpy.linalg,scipy,scipy.linalg

[pydocstyle]
convention=numpy
add_ignore=D413

[flake8]
ignore=D413
